import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import confusion_matrix, accuracy_score, precision_score, recall_score

# Step 1: Load the dataset
df = pd.read_csv('C:/Users/manish patil/Downloads/Social_Network_Ads.csv')

# Step 2: Select features and target
X = df[['Age', 'EstimatedSalary']]
y = df['Purchased']

# Step 3: Split into training and test sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=0)

# Step 4: Train logistic regression model
model = LogisticRegression()
model.fit(X_train, y_train)

# Step 5: Make predictions
y_pred = model.predict(X_test)

# Step 6: Compute confusion matrix
cm = confusion_matrix(y_test, y_pred)
TP = cm[1, 1]
TN = cm[0, 0]
FP = cm[0, 1]
FN = cm[1, 0]

# Step 7: Compute evaluation metrics
accuracy = accuracy_score(y_test, y_pred)
error_rate = 1 - accuracy
precision = precision_score(y_test, y_pred)
recall = recall_score(y_test, y_pred)

# Step 8: Print the results
print("Confusion Matrix:\n", cm)
print(f"TP = {TP}, TN = {TN}, FP = {FP}, FN = {FN}")
print(f"Accuracy = {accuracy:.2f}")
print(f"Error Rate = {error_rate:.2f}")
print(f"Precision = {precision:.2f}")
print(f"Recall = {recall:.2f}")
